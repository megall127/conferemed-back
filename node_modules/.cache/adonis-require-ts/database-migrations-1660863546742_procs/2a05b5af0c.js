"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Schema_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Schema"));
class default_1 extends Schema_1.default {
    constructor() {
        super(...arguments);
        this.tableName = 'procs';
    }
    async up() {
        this.schema.createTable(this.tableName, (table) => {
            table.increments('id');
            table
                .integer('users_id')
                .unsigned()
                .references('id')
                .inTable('users')
                .onUpdate('CASCADE')
                .onDelete('CASCADE');
            table.string('clinica');
            table.string('convenio');
            table.string('nome_paciente');
            table.string('nome_proc');
            table.string('solicitante');
            table.string('executante');
            table.bigint('valor_repasse');
            table.mediumint('quantidade');
            table.bigint('valor_auxiliar');
            table.date('date_pag');
            table.date('date_proc');
            table.bigint('valor_proc');
            table.string('total');
            table.smallint('stats_proc');
            table.smallint('stats_pay');
            table.timestamp('created_at', { useTz: true });
            table.timestamp('updated_at', { useTz: true });
        });
    }
    async down() {
        this.schema.dropTable(this.tableName);
    }
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2MDg2MzU0Njc0Ml9wcm9jcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIjE2NjA4NjM1NDY3NDJfcHJvY3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx1RkFBaUQ7QUFFakQsZUFBcUIsU0FBUSxnQkFBVTtJQUF2Qzs7UUFDWSxjQUFTLEdBQUcsT0FBTyxDQUFBO0lBb0MvQixDQUFDO0lBbENRLEtBQUssQ0FBQyxFQUFFO1FBQ2IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ2hELEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7WUFDdEIsS0FBSztpQkFDSixPQUFPLENBQUMsVUFBVSxDQUFDO2lCQUNuQixRQUFRLEVBQUU7aUJBQ1YsVUFBVSxDQUFDLElBQUksQ0FBQztpQkFDaEIsT0FBTyxDQUFDLE9BQU8sQ0FBQztpQkFDaEIsUUFBUSxDQUFDLFNBQVMsQ0FBQztpQkFDbkIsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ3BCLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUE7WUFDdkIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtZQUN4QixLQUFLLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFBO1lBQzdCLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7WUFDekIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQTtZQUMzQixLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFBO1lBQzFCLEtBQUssQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUE7WUFDN0IsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUM3QixLQUFLLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUE7WUFDOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtZQUN0QixLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1lBQ3ZCLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUE7WUFDMUIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQTtZQUNyQixLQUFLLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFBO1lBQzVCLEtBQUssQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUE7WUFFM0IsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtZQUM5QyxLQUFLLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO1FBQ2hELENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVNLEtBQUssQ0FBQyxJQUFJO1FBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7Q0FDRjtBQXJDRCw0QkFxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZVNjaGVtYSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9TY2hlbWEnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEJhc2VTY2hlbWEge1xyXG4gIHByb3RlY3RlZCB0YWJsZU5hbWUgPSAncHJvY3MnXHJcblxyXG4gIHB1YmxpYyBhc3luYyB1cCAoKSB7XHJcbiAgICB0aGlzLnNjaGVtYS5jcmVhdGVUYWJsZSh0aGlzLnRhYmxlTmFtZSwgKHRhYmxlKSA9PiB7XHJcbiAgICAgIHRhYmxlLmluY3JlbWVudHMoJ2lkJylcclxuICAgICAgdGFibGVcclxuICAgICAgLmludGVnZXIoJ3VzZXJzX2lkJylcclxuICAgICAgLnVuc2lnbmVkKClcclxuICAgICAgLnJlZmVyZW5jZXMoJ2lkJylcclxuICAgICAgLmluVGFibGUoJ3VzZXJzJylcclxuICAgICAgLm9uVXBkYXRlKCdDQVNDQURFJylcclxuICAgICAgLm9uRGVsZXRlKCdDQVNDQURFJylcclxuICAgICAgdGFibGUuc3RyaW5nKCdjbGluaWNhJylcclxuICAgICAgdGFibGUuc3RyaW5nKCdjb252ZW5pbycpXHJcbiAgICAgIHRhYmxlLnN0cmluZygnbm9tZV9wYWNpZW50ZScpXHJcbiAgICAgIHRhYmxlLnN0cmluZygnbm9tZV9wcm9jJylcclxuICAgICAgdGFibGUuc3RyaW5nKCdzb2xpY2l0YW50ZScpXHJcbiAgICAgIHRhYmxlLnN0cmluZygnZXhlY3V0YW50ZScpXHJcbiAgICAgIHRhYmxlLmJpZ2ludCgndmFsb3JfcmVwYXNzZScpXHJcbiAgICAgIHRhYmxlLm1lZGl1bWludCgncXVhbnRpZGFkZScpXHJcbiAgICAgIHRhYmxlLmJpZ2ludCgndmFsb3JfYXV4aWxpYXInKVxyXG4gICAgICB0YWJsZS5kYXRlKCdkYXRlX3BhZycpXHJcbiAgICAgIHRhYmxlLmRhdGUoJ2RhdGVfcHJvYycpXHJcbiAgICAgIHRhYmxlLmJpZ2ludCgndmFsb3JfcHJvYycpXHJcbiAgICAgIHRhYmxlLnN0cmluZygndG90YWwnKVxyXG4gICAgICB0YWJsZS5zbWFsbGludCgnc3RhdHNfcHJvYycpXHJcbiAgICAgIHRhYmxlLnNtYWxsaW50KCdzdGF0c19wYXknKVxyXG5cclxuICAgICAgdGFibGUudGltZXN0YW1wKCdjcmVhdGVkX2F0JywgeyB1c2VUejogdHJ1ZSB9KVxyXG4gICAgICB0YWJsZS50aW1lc3RhbXAoJ3VwZGF0ZWRfYXQnLCB7IHVzZVR6OiB0cnVlIH0pXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGFzeW5jIGRvd24gKCkge1xyXG4gICAgdGhpcy5zY2hlbWEuZHJvcFRhYmxlKHRoaXMudGFibGVOYW1lKVxyXG4gIH1cclxufVxyXG4iXX0=