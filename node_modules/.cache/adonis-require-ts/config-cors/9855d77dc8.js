"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const corsConfig = {
    enabled: (request) => request.url().startsWith('/api'),
    origin: true,
    methods: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE'],
    headers: true,
    exposeHeaders: [
        'cache-control',
        'content-language',
        'content-type',
        'expires',
        'last-modified',
        'pragma',
    ],
    credentials: true,
    maxAge: 90,
};
exports.default = corsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxNQUFNLFVBQVUsR0FBZTtJQWE3QixPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBd0J0RCxNQUFNLEVBQUUsSUFBSTtJQVlaLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUM7SUFtQmpELE9BQU8sRUFBRSxJQUFJO0lBc0JiLGFBQWEsRUFBRTtRQUNiLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIsY0FBYztRQUNkLFNBQVM7UUFDVCxlQUFlO1FBQ2YsUUFBUTtLQUNUO0lBYUQsV0FBVyxFQUFFLElBQUk7SUFXakIsTUFBTSxFQUFFLEVBQUU7Q0FDWCxDQUFBO0FBRUQsa0JBQWUsVUFBVSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0pmZWZDXHJcbiAqXHJcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcclxuICogZmlsZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBDb3JzQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Db3JzJ1xyXG5cclxuY29uc3QgY29yc0NvbmZpZzogQ29yc0NvbmZpZyA9IHtcclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgRW5hYmxlZFxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEEgYm9vbGVhbiB0byBlbmFibGUgb3IgZGlzYWJsZSBDT1JTIGludGVncmF0aW9uIGZyb20geW91ciBBZG9uaXNKc1xyXG4gIHwgYXBwbGljYXRpb24uXHJcbiAgfFxyXG4gIHwgU2V0dGluZyB0aGUgdmFsdWUgdG8gYHRydWVgIHdpbGwgZW5hYmxlIHRoZSBDT1JTIGZvciBhbGwgSFRUUCByZXF1ZXN0LiBIb3dldmVyLFxyXG4gIHwgeW91IGNhbiBkZWZpbmUgYSBmdW5jdGlvbiB0byBlbmFibGUvZGlzYWJsZSBpdCBvbiBwZXIgcmVxdWVzdCBiYXNpcyBhcyB3ZWxsLlxyXG4gIHxcclxuICAqL1xyXG4gIGVuYWJsZWQ6IChyZXF1ZXN0KSA9PiByZXF1ZXN0LnVybCgpLnN0YXJ0c1dpdGgoJy9hcGknKSxcclxuXHJcbiAgLy8gWW91IGNhbiBhbHNvIHVzZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJuIHRydWUgb3IgZmFsc2UuXHJcbiAgLy8gZW5hYmxlZDogKHJlcXVlc3QpID0+IHJlcXVlc3QudXJsKCkuc3RhcnRzV2l0aCgnL2FwaScpXHJcblxyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBPcmlnaW5cclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBTZXQgYSBsaXN0IG9mIG9yaWdpbnMgdG8gYmUgYWxsb3dlZCBmb3IgYEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbmAuXHJcbiAgfCBUaGUgdmFsdWUgY2FuIGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOlxyXG4gIHxcclxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cclxuICB8XHJcbiAgfCBCb29sZWFuICh0cnVlKSAgICAtIEFsbG93IGN1cnJlbnQgcmVxdWVzdCBvcmlnaW4uXHJcbiAgfCBCb29sZWFuIChmYWxzZSkgICAtIERpc2FsbG93IGFsbC5cclxuICB8IFN0cmluZyAgICAgICAgICAgIC0gQ29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgYWxsb3dlZCBvcmlnaW5zLlxyXG4gIHwgQXJyYXkgICAgICAgICAgICAgLSBBbiBhcnJheSBvZiBhbGxvd2VkIG9yaWdpbnMuXHJcbiAgfCBTdHJpbmcgKCopICAgICAgICAtIEEgd2lsZGNhcmQgKCopIHRvIGFsbG93IGFsbCByZXF1ZXN0IG9yaWdpbnMuXHJcbiAgfCBGdW5jdGlvbiAgICAgICAgICAtIFJlY2VpdmVzIHRoZSBjdXJyZW50IG9yaWdpbiBzdHJpbmcgYW5kIHNob3VsZCByZXR1cm5cclxuICB8ICAgICAgICAgICAgICAgICAgICAgb25lIG9mIHRoZSBhYm92ZSB2YWx1ZXMuXHJcbiAgfFxyXG4gICovXHJcbiAgb3JpZ2luOiB0cnVlLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgTWV0aG9kc1xyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEFuIGFycmF5IG9mIGFsbG93ZWQgSFRUUCBtZXRob2RzIGZvciBDT1JTLiBUaGUgYEFjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kYFxyXG4gIHwgaXMgY2hlY2tlZCBhZ2FpbnN0IHRoZSBmb2xsb3dpbmcgbGlzdC5cclxuICB8XHJcbiAgfCBGb2xsb3dpbmcgaXMgdGhlIGxpc3Qgb2YgZGVmYXVsdCBtZXRob2RzLiBGZWVsIGZyZWUgdG8gYWRkIG1vcmUuXHJcbiAgKi9cclxuICBtZXRob2RzOiBbJ0dFVCcsICdIRUFEJywgJ1BPU1QnLCAnUFVUJywgJ0RFTEVURSddLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgSGVhZGVyc1xyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IExpc3Qgb2YgaGVhZGVycyB0byBiZSBhbGxvd2VkIGZvciBgQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc2AgaGVhZGVyLlxyXG4gIHwgVGhlIHZhbHVlIGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzpcclxuICB8XHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzXHJcbiAgfFxyXG4gIHwgQm9vbGVhbih0cnVlKSAgICAgLSBBbGxvdyBhbGwgaGVhZGVycyBtZW50aW9uZWQgaW4gYEFjY2Vzcy1Db250cm9sLVJlcXVlc3QtSGVhZGVyc2AuXHJcbiAgfCBCb29sZWFuKGZhbHNlKSAgICAtIERpc2FsbG93IGFsbCBoZWFkZXJzLlxyXG4gIHwgU3RyaW5nICAgICAgICAgICAgLSBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBhbGxvd2VkIGhlYWRlcnMuXHJcbiAgfCBBcnJheSAgICAgICAgICAgICAtIEFuIGFycmF5IG9mIGFsbG93ZWQgaGVhZGVycy5cclxuICB8IEZ1bmN0aW9uICAgICAgICAgIC0gUmVjZWl2ZXMgdGhlIGN1cnJlbnQgaGVhZGVyIGFuZCBzaG91bGQgcmV0dXJuIG9uZSBvZiB0aGUgYWJvdmUgdmFsdWVzLlxyXG4gIHxcclxuICAqL1xyXG4gIGhlYWRlcnM6IHRydWUsXHJcblxyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBFeHBvc2UgSGVhZGVyc1xyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEEgbGlzdCBvZiBoZWFkZXJzIHRvIGJlIGV4cG9zZWQgYnkgc2V0dGluZyBgQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNgLlxyXG4gIHwgaGVhZGVyLiBCeSBkZWZhdWx0IGZvbGxvd2luZyA2IHNpbXBsZSByZXNwb25zZSBoZWFkZXJzIGFyZSBleHBvc2VkLlxyXG4gIHxcclxuICB8IENhY2hlLUNvbnRyb2xcclxuICB8IENvbnRlbnQtTGFuZ3VhZ2VcclxuICB8IENvbnRlbnQtVHlwZVxyXG4gIHwgRXhwaXJlc1xyXG4gIHwgTGFzdC1Nb2RpZmllZFxyXG4gIHwgUHJhZ21hXHJcbiAgfFxyXG4gIHwgSW4gb3JkZXIgdG8gYWRkIG1vcmUgaGVhZGVycywgc2ltcGx5IGRlZmluZSB0aGVtIGluc2lkZSB0aGUgZm9sbG93aW5nIGFycmF5LlxyXG4gIHxcclxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc1xyXG4gIHxcclxuICAqL1xyXG4gIGV4cG9zZUhlYWRlcnM6IFtcclxuICAgICdjYWNoZS1jb250cm9sJyxcclxuICAgICdjb250ZW50LWxhbmd1YWdlJyxcclxuICAgICdjb250ZW50LXR5cGUnLFxyXG4gICAgJ2V4cGlyZXMnLFxyXG4gICAgJ2xhc3QtbW9kaWZpZWQnLFxyXG4gICAgJ3ByYWdtYScsXHJcbiAgXSxcclxuXHJcbiAgLypcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8IENyZWRlbnRpYWxzXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgVG9nZ2xlIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc2AgaGVhZGVyLiBJZiB2YWx1ZSBpcyBzZXQgdG8gYHRydWVgLFxyXG4gIHwgdGhlbiBoZWFkZXIgd2lsbCBiZSBzZXQsIG90aGVyd2lzZSBub3QuXHJcbiAgfFxyXG4gIHwgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzXHJcbiAgfFxyXG4gICovXHJcbiAgY3JlZGVudGlhbHM6IHRydWUsXHJcblxyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBNYXhBZ2VcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBEZWZpbmUgYEFjY2Vzcy1Db250cm9sLU1heC1BZ2VgIGhlYWRlciBpbiBzZWNvbmRzLlxyXG4gIHwgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLU1heC1BZ2VcclxuICB8XHJcbiAgKi9cclxuICBtYXhBZ2U6IDkwLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb3JzQ29uZmlnXHJcbiJdfQ==